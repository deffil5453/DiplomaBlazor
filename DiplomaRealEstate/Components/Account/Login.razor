@page "/login"
@using DiplomaRealEstate.Models
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Mvc
@inject SignInManager<User> SignInMnager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
<PageTitle>Авторизация</PageTitle>
@attribute [ValidateAntiForgeryToken]
@if (_modalOpen)
{
    <div class="modal fade show @(_modalOpen ? "d-block" : "d-none")" tabindex="-1" role="dialog" style="display:block;">
        <div class="modal-dialog modal-dialog-centered @(_isClosing ? "closing" : "")">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Авторизация</h5>
                    <a href="" type="submit" class="btn-close btn-danger">
                    </a>
                </div>
                <EditForm Model="@_loginModel" OnValidSubmit="HandleLogin" FormName="login">
                    <div class="modal-body">
                        <DataAnnotationsValidator />
                        <div class="mb-3">
                            <ValidationMessage For="@(()=>_loginModel.Username)" />
                            <InputText @bind-Value="_loginModel.Username" class="form-control" id="username" placeholder=" " autocomplete="off" />
                            <label for="username">Логин</label>
                        </div>
                        <div class="mb-3">
                            <ValidationMessage For="@(()=>_loginModel.Password)" />
                            <InputText type="password" @bind-Value="@_loginModel.Password" class="form-control" id="password" placeholder=" " autocomplete="new-password" />
                            <label for="password">Пароль</label>
                        </div>
                        <button type="submit" class="btn btn-success w-100">Войти</button>
                        <a href="register" class="text-center">Зарегистрироваться</a>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
    <div class="modal-backdrop show"> </div>
}
@code {
    [SupplyParameterFromForm]
    private LoginModel _loginModel { get; set; } = new();
    private bool _modalOpen { get; set; }
    private bool _isClosing { get; set; }
    private async Task HandleLogin()
    {
        var result = await SignInMnager.PasswordSignInAsync(
            _loginModel.Username,
            _loginModel.Password,
            isPersistent: false, lockoutOnFailure: false);
        
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/loginTrue");
        }
    }
    protected override async Task OnInitializedAsync()
    {
        OpenRegistrationModal();
    }
    private void OpenRegistrationModal()
    {
        if (!_modalOpen)
        {
            _modalOpen = true;
        }
        _isClosing = false;
    }
    private class LoginModel
    {
        [Required(ErrorMessage = "Введите логин!")]
        public string Username { get; set; }
        [Required(ErrorMessage = "Введите пароль!")]
        [DataType(DataType.Password)]
        public string Password { get; set; }
    }
}