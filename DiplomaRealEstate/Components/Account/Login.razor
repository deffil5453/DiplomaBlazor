@page "/login"
@using DiplomaRealEstate.Models
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Mvc

@inject SignInManager<User> SignInMnager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [ValidateAntiForgeryToken]
<EditForm Model="@loginModel" OnValidSubmit="HandleLogin" FormName="login" t>
    <h1>Авторизация</h1>
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="w-25 align-content-center">
        <div class="form-floating mb-3">
            <InputText @bind-Value="@loginModel.Username" class="form-control" id="floatingInput" placeholder="Логин" />
            <label for="floatingInput">Логин</label>
        </div>
        <div class="form-floating mb-3">
            <InputText type="password" @bind-Value="@loginModel.Password" class="form-control" id="floatingPassword" autocomplete="new-password" aria-required="true" placeholder="Пароль" />
            <label for="floatingPassword">Пароль</label>
        </div>
        <button type="submit" class="btn btn-outline-success w-25">войти</button>
    </div>
</EditForm>
@code {
    [SupplyParameterFromForm]
    private LoginModel loginModel { get; set; } = new();
    private async Task HandleLogin()
    {
        var result = await SignInMnager.PasswordSignInAsync(
            loginModel.Username,
            loginModel.Password,
            isPersistent: false, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/loginTrue");
        }
    }
    private class LoginModel
    {
        [Required(ErrorMessage = "Введите логин!")]
        public string Username { get; set; }
        [Required(ErrorMessage = "Введите пароль!")]
        [DataType(DataType.Password)]
        public string Password { get; set; }
    }
}