@page "/indexRealEstate"

@using DiplomaRealEstate.Models
@using DiplomaRealEstate.Services.FavoriteServices
@using DiplomaRealEstate.Services.RealEstateServices
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inject IRealEstateService RealEstateService
@inject IFavoriteService FavoriteService
@inject AuthenticationStateProvider AutenticationStateProvider
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<p>список недвижимости уэээээ</p>
@foreach (var item in _realEstates)
{
    <div class="card mb-3" style="max-width: 500px">
        <img src="/images/@item.Photos" />
        <div class="col-md-6">
            <p1>@item.Region,</p1>
            <p1>город @item.City,</p1>
            <p1>Улица @item.Street,</p1>
            <p1>Дом @item.House,</p1>
            <p>Цена: @item.Price ₽</p>
            @if (_IsAdmin)
            {
                <a href="editRealEstate/{@item.Id}" class="btn btn-outline-info">Редактировать</a>
            }
            <button type="submit" class="@ButtonClass(item.Id)" @onclick="()=>AddToCart(item.Id)">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
                    <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z" />
                </svg>
            </button>
            <button type="button" class="btn btn-outline-primary">
                <img width="46px" height="46px" src="/images/world-map-with-a-placeholder.svg" />
                <a href="https://yandex.ru/maps/?ll=@item.Latitude,@item.Longitude&mode=poi&poi%5Bpoint%5D=@item.Latitude,@item.Longitude&poi%5Buri%5D=ymapsbm1%3A%2F%2Forg%3Foid%3D1236305364&z=19">на карте</a>
            </button>
        </div>
    </div>
}
@code {
    private List<RealEstate> _realEstates = new List<RealEstate>();
    private CartItem _favorites { get; set; }
    private bool _IsAuthenticated;
    private bool _IsAdmin;
    private string _userId;
    private string _buttonClass;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AutenticationStateProvider.GetAuthenticationStateAsync();
        _IsAuthenticated = authState.User.Identity.IsAuthenticated;
        var user = authState.User;
        _userId = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier).Value;
        _IsAdmin = _IsAuthenticated && authState.User.IsInRole("Admin");
        _realEstates = await RealEstateService.GetAllRealEstateAsync();
    }
    private async Task AddToCart(Guid id)
    {
        if (_IsAuthenticated)
        {
            bool isFavorite = await FavoriteService.GetFavoriteByUserAsync(_userId, id);
            if (!isFavorite)
            {
                await FavoriteService.AddFavoriteAsync(_userId, id);
            }
            else
            {
                await FavoriteService.RemoveFavoriteAsync(_userId, id);
            }
            StateHasChanged();
        }
    }
    private async Task<string> ButtonClass(Guid id)
    {
        bool a = await FavoriteService.GetFavoriteByUserAsync(_userId, id);
        if (a)
        {
            return "btn btn-success";
        }
        return "btn btn-primary";
    }
}