@page "/register"
@using System.ComponentModel.DataAnnotations
@using DiplomaRealEstate.Models
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject NavigationManager NavigationManager
@inject RoleManager<IdentityRole> RoleManager
<EditForm Model="@registerModel" OnValidSubmit="HandleRegistration" FormName="register">
    <h1 class="mb-5" >Регистрация</h1>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="w-25 align-content-center">

        <div class="form-floating mb-3">
            <InputText @bind-Value="registerModel.Username" class="form-control" id="floatingInput" placeholder="Логин" />
        <label for="floatingInput">Логин</label>
        </div>
        <div class="form-floating mb-3">
            <InputText type="password" @bind-Value="@registerModel.Password" class="form-control" id="floatingPassword" autocomplete="new-password" aria-required="true" placeholder="Пароль" />
            <label for="floatingPassword">Пароль:</label>
        </div>

        <button type="submit" class="btn w-100 btn-outline-success">зарегистрироваться</button>
    </div>
</EditForm>

@if (registrationSuccess)
{
    <p>Регистрация прошла успешно!</p>
    <a href="logintrue"> кликните чтобы перейти в профиль</a>
}

@code {
    [SupplyParameterFromForm]
    private RegisterModel registerModel { get; set; } = new();
    private bool registrationSuccess = false;

    private async Task HandleRegistration()
    {
        var userAdd = new User { UserName = registerModel.Username};
        var roleName = "User";
        if (registerModel.Username =="nozdrin")
        {
            roleName = "Admin";
        }
        var roleExsist = await RoleManager.RoleExistsAsync(roleName);
        if (!roleExsist)
        {
            var role = new IdentityRole(roleName);
            await RoleManager.CreateAsync(role);
        }
        var result = await UserManager.CreateAsync(userAdd, registerModel.Password);

        if (result.Succeeded)
        {
            registrationSuccess = true;
            await UserManager.AddToRoleAsync(userAdd, roleName);
            await SignInManager.SignInAsync(userAdd, true);
        }
    }
    public class RegisterModel
    {
        [Required(ErrorMessage = "Введите логин!")]
        public string Username { get; set; }
        [Required(ErrorMessage = "Введите пароль!")]
        [DataType(DataType.Password)]
        public string Password { get; set; }
    }
}